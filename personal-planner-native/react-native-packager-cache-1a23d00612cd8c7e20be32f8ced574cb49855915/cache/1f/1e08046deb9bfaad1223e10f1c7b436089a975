Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/matz-leander/projects/webutvikling/it2810-webutvikling-h17-prosjekt-3-group-34/personal-planner-native/screens/calendar.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeCalendars = require('react-native-calendars');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Calendar: {
        displayName: 'Calendar'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/matz-leander/projects/webutvikling/it2810-webutvikling-h17-prosjekt-3-group-34/personal-planner-native/screens/calendar.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var Calendar = _wrapComponent('Calendar')(function (_Component) {
    _inherits(Calendar, _Component);

    function Calendar(props) {
        _classCallCheck(this, Calendar);

        var _this = _possibleConstructorReturn(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call(this, props));

        _this.state = {
            items: { '2012-05-22': [{ text: 'item 1 - any js object' }],
                '2012-05-23': [{ text: 'item 2 - any js object' }],
                '2012-05-24': [],
                '2012-05-25': [{ text: 'item 3 - any js object' }, { text: 'any js object' }]
            } };
        return _this;
    }

    _createClass(Calendar, [{
        key: 'render',
        value: function render() {
            return _react3.default.createElement(_reactNativeCalendars.Agenda, {
                items: this.state.items,
                loadItemsForMonth: this.loadItems.bind(this),
                selected: new Date(),
                renderItem: this.renderItem.bind(this),
                renderEmptyDate: this.renderEmptyDate.bind(this),
                rowHasChanged: this.rowHasChanged.bind(this),
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 22
                }
            });
        }
    }, {
        key: 'loadItems',
        value: function loadItems(day) {
            var _this2 = this;

            setTimeout(function () {
                for (var i = -15; i < 85; i++) {
                    var time = day.timestamp + i * 24 * 60 * 60 * 1000;
                    var strTime = _this2.timeToString(time);
                    if (!_this2.state.items[strTime]) {
                        _this2.state.items[strTime] = [];
                        var numItems = Math.floor(Math.random() * 5);
                        for (var j = 0; j < numItems; j++) {
                            _this2.state.items[strTime].push({
                                name: 'Item for ' + strTime,
                                height: Math.max(50, Math.floor(Math.random() * 150))
                            });
                        }
                    }
                }

                var newItems = {};
                Object.keys(_this2.state.items).forEach(function (key) {
                    newItems[key] = _this2.state.items[key];
                });
                _this2.setState({
                    items: newItems
                });
            }, 1000);
        }
    }, {
        key: 'renderItem',
        value: function renderItem(item) {
            return _react3.default.createElement(
                _reactNative.View,
                { style: [styles.item, { height: item.height }], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 74
                    }
                },
                _react3.default.createElement(
                    _reactNative.Text,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 74
                        }
                    },
                    item.name
                )
            );
        }
    }, {
        key: 'renderEmptyDate',
        value: function renderEmptyDate() {
            return _react3.default.createElement(
                _reactNative.View,
                { style: styles.emptyDate, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 80
                    }
                },
                _react3.default.createElement(
                    _reactNative.Text,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 80
                        }
                    },
                    'This is empty date!'
                )
            );
        }
    }, {
        key: 'rowHasChanged',
        value: function rowHasChanged(r1, r2) {
            return r1.name !== r2.name;
        }
    }, {
        key: 'timeToString',
        value: function timeToString(time) {
            var date = new Date(time);
            return date.toISOString().split('T')[0];
        }
    }]);

    return Calendar;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
    item: {
        backgroundColor: 'white',
        flex: 1,
        borderRadius: 5,
        padding: 10,
        marginRight: 10,
        marginTop: 17
    },
    emptyDate: {
        height: 15,
        flex: 1,
        paddingTop: 30
    }
});

exports.default = Calendar;